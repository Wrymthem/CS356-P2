import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;

import javax.swing.*;
import javax.swing.border.EmptyBorder;


public class UserPanel {
	
	private static User user;
	private static ArrayList <GroupComponent> groupSystem;
	
	private static UserPanel instance = new UserPanel(user, groupSystem);
	
	private static JFrame frame;
	private static JPanel contentPane;
	private static JTextField txtUserID;
	private static JList <User> following;
	private static JTextArea txtTweet;
	private static JList <String> newsFeed;
	private static JScrollPane followingScrollPane;
	private static JScrollPane newsScrollPane;
	private static DefaultListModel <User> followList;
	private static DefaultListModel <String> newsfeedList;
	
	
	private static void instance() {
		
		frame = new JFrame(this.user.toString());
		frame.setBounds(100, 100, 450, 450);
		frame.setResizable(false);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		frame.setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JButton btnFollowUser = new JButton("Follow User");
		btnFollowUser.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int iD = 0;
				String userID = txtUserID.getText();
				
				if (userID.equals(user.toString())) {
					JOptionPane.showMessageDialog(frame, "Cannot follow yourself");
					return;
				}
				
				if (user.isFollowing(userID)) {
					JOptionPane.showMessageDialog(frame, "Already following");
					return;
				}
				
				for (GroupComponent gc : groupSystem) {
					if (gc instanceof User)
						if (gc.toString().equals(userID)) {
							user.follow((User) groupSystem.get(iD));
							JOptionPane.showMessageDialog(frame, "User " + groupSystem.get(iD) + " followed");
							followList.clear();
							for (Subject s : user.getFollowing()) {
								followList.addElement((User) s);
							}
							following.setModel(followList);
							return;
						}
					iD++;
				}
				JOptionPane.showMessageDialog(frame, "User " + userID + " not found");
			}
		});
		btnFollowUser.setBounds(228, 11, 196, 23);
		contentPane.add(btnFollowUser);
		
		txtUserID = new JTextField();
		txtUserID.setBounds(10, 11, 200, 22);
		contentPane.add(txtUserID);
		txtUserID.setColumns(10);
		
		followingScrollPane = new JScrollPane();
		followingScrollPane.setBounds(10, 39, 414, 120);
		contentPane.add(followingScrollPane);
		
		followList = new DefaultListModel <User> ();
		for (Subject s : user.getFollowing()) {
			followList.addElement((User) s);
		}
		following = new JList <User> (followList);
		followingScrollPane.setViewportView(following);
		
		JButton btnTweetMessage = new JButton("Tweet Message");
		btnTweetMessage.addActionListener(new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				user.newTweet(txtTweet.getText());
			}
		});
		btnTweetMessage.setBounds(228, 184, 196, 23);
		contentPane.add(btnTweetMessage);
		
		txtTweet = new JTextArea();
		txtTweet.setBounds(10, 170, 200, 50);
		contentPane.add(txtTweet);
		
		newsScrollPane = new JScrollPane();
		newsScrollPane.setBounds(10, 226, 414, 174);
		contentPane.add(newsScrollPane);
		
		newsfeedList = new DefaultListModel <String> ();
		for (Tweet t : user.getNewsFeed()) {
			newsfeedList.addElement(t.getUser() + ": " + t.getTweet());
		}
		newsFeed = new JList <String> (newsfeedList);
		newsScrollPane.setViewportView(newsFeed);
		
		/*
		JButton btnRefresh = new JButton("Refresh Tweets");
		btnRefresh.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
			}
		});
		btnRefresh.setBounds(228, 197, 196, 23);
		contentPane.add(btnRefresh);
		*/
		
		Runnable r = () -> {
		};
		
		Thread t = new Thread (r);
		
		t.start();
		
		frame.setVisible(true);
	}
	
	public User getUser() {
		return this.user;
	}
	
	public ArrayList <GroupComponent> getGroupSystem() {
		return this.groupSystem;
	}
	
	public void updateNewsFeed() {
		newsfeedList.clear();
		for (Tweet t : user.getNewsFeed()) {
			newsfeedList.addElement(t.getUser() + ": " + t.getTweet());
		}
		newsFeed.setModel(newsfeedList);
	}
	
	private UserPanel (User user, ArrayList <GroupComponent> groupSystem) {
		this.user = user;
		this.groupSystem = groupSystem;
		instance();
	}
	
	public static UserPanel getUserPanel() {
		return instance;
	}
}
